<program>
  <globalDeclaration>
    <enumDecl>
      enum      
      Color      
      {      
      red      
      ,      
      blue      
      ,      
      green      
      ,      
      black      
      ,      
      purple      
      ,      
      pink      
      ,      
      grey      
      }      
      ;      
    </EnumDecl>
  </globalDeclaration>
  <globalDeclaration>
    <structDecl>
      struct      
      Haitian      
      {      
    <variableDecl>
      double      
      height      
      ,      
      width      
      ;      
    </variableDecl>
    <variableDecl>
      double      
      weight      
      ;      
    </variableDecl>
    <variableDecl>
      double      
      price      
      ;      
    </variableDecl>
    <variableDecl>
      enum      
      Color      
      s      
      ;      
    </variableDecl>
    <variableDecl>
      int      
      stock      
      ;      
    </variableDecl>
      }      
      ;      
    </structDecl>
  </globalDeclaration>
  <globalDeclaration>
    <variableDecl>
      int      
      A      
      ;      
    </variableDecl>
  </globalDeclaration>
  <globalDeclaration>
    <variableDecl>
      double      
      C      
      ;      
    </variableDecl>
  </globalDeclaration>
  <globalDeclaration>
    <FunctionDecl>
      void      
      play      
      (      
      <parameterList>
        int        
        A        
        ,        
        double        
        C        
      </parameterList>
      )      
      <bodyDecl>
        {        
        <statements>
          <letStatement>
            ++            
            A            
            ;            
          </letStatement>
        </statements>
        <statements>
          <letStatement>
            C            
            =            
            <expression>
              <term>
                C                
              </term>
              +              
              <term>
                A                
              </term>
            </expression>
            ;            
          </letStatement>
        </statements>
        <statements>
          <doStatement>
            <routineCall>
              printf              
              (              
              <expressionList>
                <expression>
                  <term>
                    "int: %d, double: %lf\n"                    
                  </term>
                </expression>
                ,                
                <expression>
                  <term>
                    A                    
                  </term>
                </expression>
                ,                
                <expression>
                  <term>
                    C                    
                  </term>
                </expression>
              </expressionList>
              )              
              ;              
            </routineCall>
          </doStatement>
        </statements>
        <statements>
          <returnStatement>
            return            
            ;            
          </returnStatement>
        </statements>
        }        
      </bodyDecl>
    </FunctionDecl>
  </globalDeclaration>
  <globalDeclaration>
    <FunctionDecl>
      int      
      main      
      (      
      )      
      <bodyDecl>
        {        
        <variableDecl>
          struct          
          Haitian          
          HT_1th          
          ;          
        </variableDecl>
        <statements>
          <letStatement>
            HT_1th            
            .            
            height            
            =            
            <expression>
              <term>
                100.0                
              </term>
            </expression>
            ;            
          </letStatement>
        </statements>
        <statements>
          <letStatement>
            HT_1th            
            .            
            width            
            =            
            <expression>
              <term>
                50.0                
              </term>
            </expression>
            ;            
          </letStatement>
        </statements>
        <statements>
          <letStatement>
            HT_1th            
            .            
            weight            
            =            
            <expression>
              <term>
                10000000.0                
              </term>
            </expression>
            ;            
          </letStatement>
        </statements>
        <statements>
          <letStatement>
            HT_1th            
            .            
            s            
            =            
            <expression>
              <term>
                0                
              </term>
            </expression>
            ;            
          </letStatement>
        </statements>
        <statements>
          <doStatement>
            <routineCall>
              printf              
              (              
              <expressionList>
                <expression>
                  <term>
                    "%d\n"                    
                  </term>
                </expression>
                ,                
                <expression>
                  <term>
                    0                    
                  </term>
                </expression>
              </expressionList>
              )              
              ;              
            </routineCall>
          </doStatement>
        </statements>
        <statements>
          <doStatement>
            <routineCall>
              printf              
              (              
              <expressionList>
                <expression>
                  <term>
                    "OK!\n"                    
                  </term>
                </expression>
              </expressionList>
              )              
              ;              
            </routineCall>
          </doStatement>
        </statements>
        <statements>
          <letStatement>
            A            
            =            
            <expression>
              <term>
                10                
              </term>
            </expression>
            ;            
          </letStatement>
        </statements>
        <statements>
          <letStatement>
            C            
            =            
            <expression>
              <term>
                8.88                
              </term>
            </expression>
            ;            
          </letStatement>
        </statements>
        <statements>
          <doStatement>
            <routineCall>
              play              
              (              
              <expressionList>
                <expression>
                  <term>
                    A                    
                  </term>
                </expression>
                ,                
                <expression>
                  <term>
                    C                    
                  </term>
                </expression>
              </expressionList>
              )              
              ;              
            </routineCall>
          </doStatement>
        </statements>
        <statements>
          <returnStatement>
            return            
            <expression>
              <term>
                0                
              </term>
            </expression>
            ;            
          </returnStatement>
        </statements>
        }        
      </bodyDecl>
    </FunctionDecl>
  </globalDeclaration>
</program>